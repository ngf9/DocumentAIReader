// This file is auto-generated by @hey-api/openapi-ts

export type BodyChatServiceChatWithDocument = {
    messages: Array<{
        [key: string]: string;
    }>;
    document_id: string;
};

export type BodyChatServiceGetDocumentInfo = {
    document_id: string;
};

export type BodyPdfServiceGetDocument = {
    document_id: string;
};

export type BodyShareServiceCreateChatSession = {
    document_id: string;
};

export type BodyShareServiceCreateShareableLink = {
    document_id: string;
};

export type BodyShareServiceGetChatSession = {
    session_token: string;
};

export type BodyShareServiceGetDocumentByShareToken = {
    share_token: string;
};

export type BodyShareServiceRevokeShareAccess = {
    document_id: string;
};

export type BodyShareServiceUpdateChatSessionActivity = {
    session_token: string;
};

export type BodySharedChatServiceChatWithSharedDocument = {
    session_token: string;
    message: string;
};

export type BodySharedChatServiceGetSharedChatHistory = {
    session_token: string;
};

export type BodyPdfServiceUploadAndProcessPdf = {
    pdf_file: Blob | File;
    title: string;
};

/**
 * Table for storing individual chat sessions with documents.
 */
export type ChatSession = {
    id?: string;
    document_id: string;
    session_token: string;
    created_at?: string;
    last_activity?: string;
};

/**
 * Table for storing PDF documents metadata.
 */
export type Document = {
    id?: string;
    title: string;
    pdf_path: string;
    pdf_url?: string | null;
    created_at?: string;
    is_public?: boolean | null;
    share_token?: string | null;
};

export type HttpValidationError = {
    detail?: Array<ValidationError>;
};

export type ValidationError = {
    loc: Array<string | number>;
    msg: string;
    type: string;
};

export type PdfServiceUploadAndProcessPdfData = {
    body: BodyPdfServiceUploadAndProcessPdf;
    path?: never;
    query?: never;
    url: '/api/pdf_service/upload_and_process_pdf';
};

export type PdfServiceUploadAndProcessPdfErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type PdfServiceUploadAndProcessPdfError = PdfServiceUploadAndProcessPdfErrors[keyof PdfServiceUploadAndProcessPdfErrors];

export type PdfServiceUploadAndProcessPdfResponses = {
    /**
     * Successful Response
     */
    200: Document;
};

export type PdfServiceUploadAndProcessPdfResponse = PdfServiceUploadAndProcessPdfResponses[keyof PdfServiceUploadAndProcessPdfResponses];

export type PdfServiceGetDocumentData = {
    body: BodyPdfServiceGetDocument;
    path?: never;
    query?: never;
    url: '/api/pdf_service/get_document';
};

export type PdfServiceGetDocumentErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type PdfServiceGetDocumentError = PdfServiceGetDocumentErrors[keyof PdfServiceGetDocumentErrors];

export type PdfServiceGetDocumentResponses = {
    /**
     * Successful Response
     */
    200: Document;
};

export type PdfServiceGetDocumentResponse = PdfServiceGetDocumentResponses[keyof PdfServiceGetDocumentResponses];

export type PdfServiceListDocumentsData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/pdf_service/list_documents';
};

export type PdfServiceListDocumentsResponses = {
    /**
     * Successful Response
     */
    200: Array<Document>;
};

export type PdfServiceListDocumentsResponse = PdfServiceListDocumentsResponses[keyof PdfServiceListDocumentsResponses];

export type ChatServiceChatWithDocumentData = {
    body: BodyChatServiceChatWithDocument;
    path?: never;
    query?: never;
    url: '/api/chat_service/chat_with_document';
};

export type ChatServiceChatWithDocumentErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ChatServiceChatWithDocumentError = ChatServiceChatWithDocumentErrors[keyof ChatServiceChatWithDocumentErrors];

export type ChatServiceChatWithDocumentResponses = {
    /**
     * Successful Response
     */
    200: string;
};

export type ChatServiceChatWithDocumentResponse = ChatServiceChatWithDocumentResponses[keyof ChatServiceChatWithDocumentResponses];

export type ChatServiceGetDocumentInfoData = {
    body: BodyChatServiceGetDocumentInfo;
    path?: never;
    query?: never;
    url: '/api/chat_service/get_document_info';
};

export type ChatServiceGetDocumentInfoErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ChatServiceGetDocumentInfoError = ChatServiceGetDocumentInfoErrors[keyof ChatServiceGetDocumentInfoErrors];

export type ChatServiceGetDocumentInfoResponses = {
    /**
     * Successful Response
     */
    200: {
        [key: string]: string;
    };
};

export type ChatServiceGetDocumentInfoResponse = ChatServiceGetDocumentInfoResponses[keyof ChatServiceGetDocumentInfoResponses];

export type ShareServiceCreateShareableLinkData = {
    body: BodyShareServiceCreateShareableLink;
    path?: never;
    query?: never;
    url: '/api/share_service/create_shareable_link';
};

export type ShareServiceCreateShareableLinkErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ShareServiceCreateShareableLinkError = ShareServiceCreateShareableLinkErrors[keyof ShareServiceCreateShareableLinkErrors];

export type ShareServiceCreateShareableLinkResponses = {
    /**
     * Successful Response
     */
    200: {
        [key: string]: string;
    };
};

export type ShareServiceCreateShareableLinkResponse = ShareServiceCreateShareableLinkResponses[keyof ShareServiceCreateShareableLinkResponses];

export type ShareServiceGetDocumentByShareTokenData = {
    body: BodyShareServiceGetDocumentByShareToken;
    path?: never;
    query?: never;
    url: '/api/share_service/get_document_by_share_token';
};

export type ShareServiceGetDocumentByShareTokenErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ShareServiceGetDocumentByShareTokenError = ShareServiceGetDocumentByShareTokenErrors[keyof ShareServiceGetDocumentByShareTokenErrors];

export type ShareServiceGetDocumentByShareTokenResponses = {
    /**
     * Successful Response
     */
    200: Document | null;
};

export type ShareServiceGetDocumentByShareTokenResponse = ShareServiceGetDocumentByShareTokenResponses[keyof ShareServiceGetDocumentByShareTokenResponses];

export type ShareServiceCreateChatSessionData = {
    body: BodyShareServiceCreateChatSession;
    path?: never;
    query?: never;
    url: '/api/share_service/create_chat_session';
};

export type ShareServiceCreateChatSessionErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ShareServiceCreateChatSessionError = ShareServiceCreateChatSessionErrors[keyof ShareServiceCreateChatSessionErrors];

export type ShareServiceCreateChatSessionResponses = {
    /**
     * Successful Response
     */
    200: ChatSession;
};

export type ShareServiceCreateChatSessionResponse = ShareServiceCreateChatSessionResponses[keyof ShareServiceCreateChatSessionResponses];

export type ShareServiceGetChatSessionData = {
    body: BodyShareServiceGetChatSession;
    path?: never;
    query?: never;
    url: '/api/share_service/get_chat_session';
};

export type ShareServiceGetChatSessionErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ShareServiceGetChatSessionError = ShareServiceGetChatSessionErrors[keyof ShareServiceGetChatSessionErrors];

export type ShareServiceGetChatSessionResponses = {
    /**
     * Successful Response
     */
    200: ChatSession | null;
};

export type ShareServiceGetChatSessionResponse = ShareServiceGetChatSessionResponses[keyof ShareServiceGetChatSessionResponses];

export type ShareServiceUpdateChatSessionActivityData = {
    body: BodyShareServiceUpdateChatSessionActivity;
    path?: never;
    query?: never;
    url: '/api/share_service/update_chat_session_activity';
};

export type ShareServiceUpdateChatSessionActivityErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ShareServiceUpdateChatSessionActivityError = ShareServiceUpdateChatSessionActivityErrors[keyof ShareServiceUpdateChatSessionActivityErrors];

export type ShareServiceUpdateChatSessionActivityResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type ShareServiceRevokeShareAccessData = {
    body: BodyShareServiceRevokeShareAccess;
    path?: never;
    query?: never;
    url: '/api/share_service/revoke_share_access';
};

export type ShareServiceRevokeShareAccessErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ShareServiceRevokeShareAccessError = ShareServiceRevokeShareAccessErrors[keyof ShareServiceRevokeShareAccessErrors];

export type ShareServiceRevokeShareAccessResponses = {
    /**
     * Successful Response
     */
    200: boolean;
};

export type ShareServiceRevokeShareAccessResponse = ShareServiceRevokeShareAccessResponses[keyof ShareServiceRevokeShareAccessResponses];

export type SharedChatServiceChatWithSharedDocumentData = {
    body: BodySharedChatServiceChatWithSharedDocument;
    path?: never;
    query?: never;
    url: '/api/shared_chat_service/chat_with_shared_document';
};

export type SharedChatServiceChatWithSharedDocumentErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type SharedChatServiceChatWithSharedDocumentError = SharedChatServiceChatWithSharedDocumentErrors[keyof SharedChatServiceChatWithSharedDocumentErrors];

export type SharedChatServiceChatWithSharedDocumentResponses = {
    /**
     * Successful Response
     */
    200: {
        [key: string]: unknown;
    };
};

export type SharedChatServiceChatWithSharedDocumentResponse = SharedChatServiceChatWithSharedDocumentResponses[keyof SharedChatServiceChatWithSharedDocumentResponses];

export type SharedChatServiceGetSharedChatHistoryData = {
    body: BodySharedChatServiceGetSharedChatHistory;
    path?: never;
    query?: never;
    url: '/api/shared_chat_service/get_shared_chat_history';
};

export type SharedChatServiceGetSharedChatHistoryErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type SharedChatServiceGetSharedChatHistoryError = SharedChatServiceGetSharedChatHistoryErrors[keyof SharedChatServiceGetSharedChatHistoryErrors];

export type SharedChatServiceGetSharedChatHistoryResponses = {
    /**
     * Successful Response
     */
    200: Array<{
        [key: string]: unknown;
    }>;
};

export type SharedChatServiceGetSharedChatHistoryResponse = SharedChatServiceGetSharedChatHistoryResponses[keyof SharedChatServiceGetSharedChatHistoryResponses];